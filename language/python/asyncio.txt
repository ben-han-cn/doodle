coroutine 
    --> eventloop 
        --> future 
            --> task 
                --> subprocess & trhead 
                    --> tool 
                        --> network:transport, TCP&UDP, stream



coroutine:
    async def f():
        return 111
    
    cor = f() ---> return a  cor
    cor.send(None)                    //run the coroutine
    cor.throw(asyncio.CancelledError) //cancel the coroutine
    when coroutine exit(come to return), it will throw StopIteration e, e.value will be the return value of coroutine


loop = asyncio.get_event_loop()
asyncio.get_event_loop().create_task(coro) //run the coroutine
