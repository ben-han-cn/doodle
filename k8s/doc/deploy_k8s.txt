1 disable SELinux
/etc/selinux/config 
SELIUNX=enforcing --> permissive
# setenforce 0

2 disable firewall
systemctl disable firewalld && systemctl stop firewalld

3 install componenet
# yum install -y docker kubelet kubeadm kubectl kubernetes-cni
# systemctl enable docker && systemctl start docker
# systemctl enable kubelet && systemctl start kubelet

4 configure the kernel 
# sysctl -w net.bridge.bridge-nf-call-iptables=1
# echo "net.bridge.bridge-nf-call-iptables=1" > /etc/sysctl.d/k8s.conf
kubelet won't run if swap is enable, disable swap 
# swapoff -a && sed -i '/ swap / s/^/#/' /etc/fstab

set host name
# hostnamectl --static set-hostname node1.k8s

5 kubeadm run k8s master
# kubeadm init  
kubeadm run api server, scheduler, controller manager and etcd as containers.
kubeadm write these componenet's YAML descriptors to /etc/kubernetes/manifests directory.
kubelet monitor the directory and run these components through Docker.

6 configure kubectl 
# export KUBECONFIG=/etc/kubernetes/admin.conf
these environment will make kubectl use correct configure file.

7 make node join the cluster
# kubeadm join --token eb3877.3585d0423978c549 192.168.64.138:6443
--discovery-token-ca-cert-hash sha256:037d2c5505294af196048a17f184a79411c7b1eac48aaa0ad137075be3d7a847
run join command in each node, the parameter is get from the first time run kubeadm init in master node

8 setup container network
$ kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')
this will install Weave net container networking plugin

