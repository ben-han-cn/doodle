pod and replicateSet abstract compute and memory
storage in k8s focus on:
  File Storage
  Block Storage
because data path is standardized(posix, iscsi)

volume is a way reference to block device or mounted filesystem
accessible by all containers in pod
volume plugin sepcify
  how volume is setup in pod
  medium that backs it

volume plugin:
  remote stoarge
  ephemeral storage
  local persistent volume


ephemeral storage:
  EmptyDir:
    get file storage from host 
    could be shared between container in same pod
    volume built on
      secret volume     // expose secret as file
      configMap volume  //  
      downwardapi volume


  gitRepo:
    an EmptyDir volumn initially populated with the contents of a git
  repository.


remote storage:
  1 inline:
    apiVersion: v1
    kind: Pod
    metadata:
      name: sleepypod
    spec:
      volumes:
        - name: data
          gcePersistentdDisk:
            pdName: panda-disk
            fsType: ext4

    containers:
      - name: sleepycontainer
        image: gcr.io/google_containers/busybox
        command:
          - sleep 
          - "6000"
        volumeMounts:
          - name: data
            mountPath: /data
            readOnly: flase

    pod direct reference to the storage, but if this pod is moving to 
    another cluster without gce support, this pod will fail


  2 PV(PersistentVolume), PVC(PersistentVolume Claim)
  decouple the storage from the pod 
  cluster operator declare all the supported volume with PC
      apiVersion: v1
      kind: PersistentVolume
      metadata:
        name: myPV1
      spec:
        accessModes:
        - ReadWriteOnce
        capacity:
         storage: 10Gi
        persistentVolumeReclaimPolicy: Retain
        gcePersistentdDisk:
          fsType: ext4
          pdName: panda-disk

  pods ask for needed volumes, with PVC
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: mypvc
        namespace: testns
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
  
  pod yaml changed to:
      apiVersion: v1
      kind: Pod
      metadata:
        name: sleepypod
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mypvc
      containers:
        .....
        volumeMounts:
        - name: data
          mountPath: /data
          readOnly: false

  previous exampe is call static provision, for dynamic provisioning, k8s use storage class
      kind: StorageClass
      apiVersion: storage.k8s.io/v1
      metadata:
        name: fast
      provisioner: kubernetes.io/gce-pd
      parameters:  //opaque to k8s, only provisioner need them
        type: pd-ssd

      //change pvc to 
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: mypvc
        namespace: testns
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
        storageClassName: fast


access mode:
ReadWriteOnce: only one node could mount the volumn and read, write
ReadOnlyMany: many nodes could mount it and read
ReadWriteMany: many nodes could mount it and read, write
