serialize
convert
default

core api:
/api/v1/resource 
other api:
/apis/<api group>/version/resource


resource == general type appears in http path and in plurs (jobs)
kind     == logial type in json result about one object (job)
resource is http endpoint for interface, some operation isn't related to
a real object, so there is logical resource like "jobs/status" which has
kind job which is same with resource jobs
jobs/resources is sub resource of jobs


multi-version object:
different url to get one object
conversion between version is automatically
only one stroage version ---> encoding(protobuf/json) ---> etcd 


discovery:
host/apis/
host/apis/batch/v1
    "apiVersion": "v1",
    "groupVersion": "batch/v1",
    "kind": "APIResourceList",
    "resources":[{
        "kind": "job",
        "name: "jobs",  //this is the name of resource
        "namespaced": true,
        "verbs": ["create", "delete", "get", "list", "patch", "update", "watch"],
    }}


custom resource definition (user defined kind):
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
    name: crontabs.stable.example.com
spec:
    group: stable.example.com
    versions:
        - name: v1
          served: true
          storage: true
    scope: Namespaced
    names:
        plural: crontabs
        singular: crontab
        kind: CronTab
        shortNames:
        - ct
k create -f job-crd.yaml


apiVersion: "stable.example.com/v1"
kind: CronTab
metadata:
  name: my-new-cron-object
spec:
  cronSpec: "* * * * */5"
  image: my-awesome-cron-image
k create -f my-cron.yaml

k get ct
k get crontab


kube-aggregator   ---> kube-apiserver
                       service catalog
                       paas ....


CRD + controller ---> https://github.com/operator-framework/operator-sdk
                      https://github.com/kubernetes-sigs/kubebuilder
api server ----> https://github.com/kubernetes-incubator/apiserver-builder 



etcd data:
1 backend services:
/registry/apiregistration.k8s.io/apiservices/v1.
                                             v1.apps
                                             v1.authentication.k8s.io
                                             ....

2 resources:
 deployment:
    /registry/deployments/default/ghost
 namespaces:
    /registry/namespaces/default
    /registry/namespaces/kube-public
    /registry/namespaces/kube-system
 leases:
    /registry/masterleases/10.0.2.15
 priorityclass
    /registry/priorityclasses/system-cluster-critical
    /registry/priorityclasses/system-node-critical
 RangeAllocation
    /registry/ranges/serviceips
    /registry/ranges/servicenodeports
 services:
    /registry/services/specs/default/kubernetes
 endpoints:
    /registry/services/endpoints/default/kubernetes
 pods:
    /registry/pods/default/counter
