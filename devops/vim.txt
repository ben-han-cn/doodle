:6,8m.
:g/^\s*$/d
:v/^\s*"/d

:%s/`[^`]*`//g  ----> remove `....`


qq                  #start to record and save it to q
:9,$norm! @q        #apply the macro from 9 to the end of file
g/pattern/norm! @q  #apply the macro  to line match the pattern
@q                  #apply the macro 
10@q                #apply the macro 10 times


ctrl - n  #next match word
ctrl - p  #prev match word

/\ctarget #case insensitive search


vim-go
https://github.com/fatih/vim-go.git
//install missing tools
:GoInstallBinaries guru,gorename,gomodifytags,errcheck,gometalinter,golint

:GoRun -- run current file
:GoBuild -- compile current package
:GoDef -- to the symbol/declaration
:GoImport/GoDrop -- add/drop import package
:GoAddTags/GoRemoveTags -- add tags to struct field
    GoAddTags ---> add default json
    GoAddTags yaml --> add `yaml:""`
:GoErrCheck

gorename -from '"cement/cache".Cache' -to KVCreate //rename struct name
gorename -from '"cement/cache".Cache.Add' -to Create //rename struct method
gorename -from '"cement/cache".Cache.maxMessageCount' -to maxCount //rename struct field
gorename -from '"cement/cache".Cache.Get::elem' -to e //rename local variable elem in function Get to e


screen movement
H: top of screen
M: middle of screen
L: bottom of screen
zz, zt, zb: make current line in the top/middle/bottom of screen
ctrl - e: keep the cursor postion, make scroll down the screen
ctrl - y: keep the cursor postion, make scroll up the screen
ctrl-u, ctrl-d: half page movement
ctrl-b, ctrl-f: full page movement
0, $: beg, end of currnet line
^, g_: first, last char on current line
word-wise: wW, eE, bB
w -- small word like abc
W -- big word like abc-goo


D == d$
49,82d //delete from line 49 to 82



select block, then :fold
zo - open
zc - close

            new-files   modified-fiels deleted-fiels
git add -A     +            +              +
git add .      +            +              
git add -u                  +              +
