mainly working on ip and transport layer:
ip layer:
    routing packets between hosts
    fragment and reassemble datagram
    connectless, unreliable

netfilter(packet filtering framework) --- kernel
iptable interactive with netfilter to implement firewall functionality

netfilter define several hooks which could be registered and will be
fired during different stage when handling a packet
    pre-routing
    input
    forward
    output
    post-routing


base chain(relate to hooks in netfilter):
    PREROUTING
    INPUT
    FORWARD
    OUTPUT
    POSTROUTING

rules is saved in chain
chain is organized in table
chain is the revoked by netfilter, table is a logic way to organize chain.
same type chain in different table is register under the same hook in netfilter 
one after another 

-t select table
-s source address
-d destination address
-p protocol
-j action
-P default policy for a chain
-D delete a rule for a chain by index from 1
-R replace a rule for a chain
-F remove all rules for sepecified chain
-L list chain rule
-A append/add rule to end of chain
-i nic
-I Insert one or more rules in the selected chain as the given rule number.
-m Specifies a match to use, that is, an extension module that tests for a specific property.

iptables -A INPUT -j ACCEPT -p tcp --destination-port 80 -i eth0

final(last) rule is the catch all rule
iptables -A INPUT -j DROP -p tcp -i eth0


iptables-save > /root/iptables-bakcup-`date +%F`
iptables-restore < /root/iptables-bakcup-2014-04-14


-I INPUT 1 -m start --state RELATED,ESTABLISHED -j ACCEPT
-I OUTPUT 1 -m start --state RELATED,ESTABLISHED -j ACCEPT

iptables -A INPUT -p tcp -syn -m multiport --dport 80,443 -m connlimit --connlimit-above 20 -j REJECT \
    --reject-with-tcp-reset

masquerade == source NAT
//external ip address is unknown or dynamic
//change the sender address to eth1 address
iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE
